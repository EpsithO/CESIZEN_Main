name: dry-run

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: dry-run-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend-dryrun:
    name: Backend — Dry Run
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Maven repo
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            m2-

      - name: Build & tests (simule le pipeline réel)
        run: |
          set -euo pipefail
          mvn -B -DskipTests=false -pl api -am verify || true
          mkdir -p out
          # Jar réel si dispo, sinon placeholder
          (ls api/target/*.jar && cp api/target/*.jar out/app-backend.jar) \
            || echo "(Jar d’exemple — dry-run)" > out/app-backend.jar

      - name: Sécurité — dry run
        run: |
          echo "[DRY-RUN] OWASP Dependency-Check / CodeQL" | tee out/security-backend.txt

      - name: Docker — dry run
        run: |
          echo "[DRY-RUN] docker build -t example.local/cesizen-backend:${GITHUB_SHA} api" | tee -a out/docker.txt

      - name: Deploy — dry run
        run: |
          echo "[DRY-RUN] ssh prod && docker compose up -d" | tee -a out/deploy.txt

      - name: Upload artifacts (backend)
        uses: actions/upload-artifact@v4
        with:
          name: backend-dryrun-artifacts
          path: out/*
          if-no-files-found: warn
          retention-days: 7

  frontend-dryrun:
    name: Frontend — Dry Run
    runs-on: ubuntu-latest
    needs: backend-dryrun
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            CESIZen_front/package-lock.json
            CESIZen_front/package.json

      - name: Install deps (tolère projet vide)
        run: |
          npm ci --prefix CESIZen_front || true

      - name: Build (ou dist de démo)
        run: |
          npm run build --prefix CESIZen_front \
            || (mkdir -p CESIZen_front/dist && echo "dist demo" > CESIZen_front/dist/index.html)

      - name: Pack artifacts
        run: |
          mkdir -p out
          tar -czf out/frontend-dist.tgz -C CESIZen_front/dist .

      - name: Sécurité — dry run
        run: |
          echo "[DRY-RUN] npm audit / ESLint" | tee out/security-frontend.txt

      - name: Docker — dry run
        run: |
          echo "[DRY-RUN] docker build -t example.local/cesizen-frontend:${GITHUB_SHA} CESIZen_front" | tee -a out/docker.txt

      - name: Upload artifacts (frontend)
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dryrun-artifacts
          path: out/*
          if-no-files-found: warn
          retention-days: 7
